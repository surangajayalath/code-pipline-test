version: 0.2
env:
  secrets-manager:
    PROJECT: arn:aws:secretsmanager:us-west-2:458121188926:secret:sonarqube-5kfTmz:PROJECT
    HOST: arn:aws:secretsmanager:us-west-2:458121188926:secret:sonarqube-5kfTmz:HOST
    SONAR_TOKEN: arn:aws:secretsmanager:us-west-2:458121188926:secret:sonarqube-5kfTmz:SONAR_TOKEN
phases:
  install:
    runtime-versions:
      java: corretto11
  pre_build:
    commands:
      - apt-get update
      - apt-get install unzip wget nodejs -y
      - export SONAR_SCANNER_VERSION=4.7.0.2747
      - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
      - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
      - export SONAR_SCANNER_OPTS="-server"

  build:
    commands:
      #- sonar-scanner -Dsonar.projectKey=codepipeline -Dsonar.sources=. -Dsonar.host.url=http://audit.loyalty.cxforge.com
      - sonar-scanner -Dsonar.projectKey=$PROJECT -Dsonar.sources=. -Dsonar.host.url=$HOST
      - sleep 60
      - curl $HOST/api/qualitygates/project_status?projectKey=$Project >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi

# version: 0.2
# env:
#   secrets-manager:
#     PROJECT: arn:aws:secretsmanager:us-west-2:458121188926:secret:sonarqube-5kfTmz:PROJECT
#     HOST: arn:aws:secretsmanager:us-west-2:458121188926:secret:sonarqube-5kfTmz:HOST
#     SONAR_TOKEN: arn:aws:secretsmanager:us-west-2:458121188926:secret:sonarqube-5kfTmz:SONAR_TOKEN

# phases:
#   install:
#     runtime-versions:
#       java: corretto11
#   pre_build:
#     commands:
#       - apt-get update
#       - apt-get install unzip wget nodejs -y
#       # - export SONAR_SCANNER_VERSION=4.7.0.2747
#       # - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
#       # - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
#       # - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
#       # - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
#       # - export SONAR_SCANNER_OPTS="-server"

#   build:
#     commands:
#       - sonar-scanner -Dsonar.projectKey=$PROJECT -Dsonar.sources=. -Dsonar.host.url=$HOST
#       - sleep 50
#       #- aws codebuild stop-build --id testone:2477389b-96a3-4a37-984b-b9b5e789f9c3
#       - BUILD_ID=$(echo "$CODEBUILD_BUILD_ID" | cut -d':' -f2)
#       - aws codebuild stop-build --id "$BUILD_ID"
#       # - |
#       #   STATUS=$(curl -s "http://audit.loyalty.cxforge.com/api/qualitygates/project_status?projectKey=codepipeline" | jq -r '.projectStatus.status')
#       #   if [ "$STATUS" = "OK" ]; then
#       #     echo "SonarQube Quality Gate passed."
#       #   else
#       #     echo "SonarQube Quality Gate failed. Stopping CodeBuild..."
#       #     exit 1
#       #   fi
#       - |
#         STATUS=$(curl -s "$HOST/api/qualitygates/project_status?projectKey=$PROJECT" | jq -r '.projectStatus.status')
#         if [[ "$STATUS" == "ERROR" ]]; then
#           echo "SonarQube Quality Gate failed. Stopping CodeBuild..."
#           exit 1
#         elif [[ "$STATUS" == "OK" ]]; then
#           echo "SonarQube Quality Gate passed."
#         else
#           echo "Unknown SonarQube Quality Gate status: $STATUS"
#           exit 1
#         fi
# post_build: 
#   commands:
#     - apt-get install curl -y



