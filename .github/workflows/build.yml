name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Check SonarQube Status
        id: sonar_status
        run: |
          curl -u suranga:admin "http://audit.loyalty.cxforge.com/api/qualitygates/project_status?projectKey=shoutout-loyalty-campaign-service" > result.json
          status=$(cat result.json | jq -r '.projectStatus.status')
          echo "SonarQube Status: $status"
          if [[ "$status" == "ERROR" ]]; then
            echo "SonarQube Quality Gate is red. Code quality issues detected."
            echo "::set-env name=SONAR_STATUS::error"
            exit 1
          elif [[ "$status" == "OK" ]]; then
            echo "SonarQube Quality Gate is green. Code quality is good."
            echo "::set-env name=SONAR_STATUS::ok"
            exit 0
          else
            echo "SonarQube Quality Gate is not OK or ERROR. Skipping further actions."
            echo "::set-env name=SONAR_STATUS::skipped"
            exit 0
          fi

  create_pr:
    name: Create PR
    needs: build
    runs-on: ubuntu-latest
    if: env.SONAR_STATUS == 'ok'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create PR
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          title: Merge pull request to master
          body: Auto-generated pull request from the CI pipeline.
